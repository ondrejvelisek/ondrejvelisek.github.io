"use strict";(self.webpackChunk_torrta_docs=self.webpackChunk_torrta_docs||[]).push([[674],{499:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var s=o(4016),a=o(5105),n=o(3331);const i={slug:"practical-limits-of-react-hooks-recursion",image:"./hook.png",draft:!1},r="Practical limits of React hooks - Recursion",c={image:o(937).A,authorsImageUrls:[]},l=[];function h(e){const t={p:"p",...(0,n.R)(),...e.components};return(0,a.jsx)(t.p,{children:"While ago, I started using React hooks. The simplicity, homogenity and composability sounded great.\nBoth components and hooks are simple functions. I can easily react on state changes from memory,\nlocal storage, location URL and server the same way - with hooks. Mental model stays simple.\nMy app is just a big function which consumes state and produces DOM. This big function is composed\nof a smaller functions which are composed of smaller functions and so on. But there were obstacles\nI've started to encounter and in the end I hit the hard limit of React hooks."})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},937:(e,t,o)=>{o.d(t,{A:()=>s});const s=o.p+"assets/images/hook-54996576765c9b42ad403e3eff720109.png"},4016:e=>{e.exports=JSON.parse('{"permalink":"/practical-limits-of-react-hooks-recursion","source":"@site/blog/2022-03-23-practical-limits-of-react-hooks-recursion/index.mdx","title":"Practical limits of React hooks - Recursion","description":"While ago, I started using React hooks. The simplicity, homogenity and composability sounded great.","date":"2022-03-23T00:00:00.000Z","tags":[],"readingTime":3.925,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"practical-limits-of-react-hooks-recursion","image":"./hook.png","draft":false},"unlisted":false,"prevItem":{"title":"Conceptual Model of React and RSC","permalink":"/conceptual-model-of-react-and-rsc"}}')}}]);